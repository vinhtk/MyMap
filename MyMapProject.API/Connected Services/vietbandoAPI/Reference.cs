//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMapProject.Library.vietbandoAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SinglePoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.Singlestring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleArrayOfstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.Singlebase64Binary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleDirectionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.Singleboolean))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.Multiplestring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.MultipleGroupCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.MultipleCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleGroupCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Error ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ResponseTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Error Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ResponseTime {
            get {
                return this.ResponseTimeField;
            }
            set {
                if ((this.ResponseTimeField.Equals(value) != true)) {
                    this.ResponseTimeField = value;
                    this.RaisePropertyChanged("ResponseTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Error", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class Error : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleBatchReverseGeocodingResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleBatchReverseGeocodingResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.BatchReverseGeocodingResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.BatchReverseGeocodingResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SinglePoint", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SinglePoint : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMBROfRegionResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleMBROfRegionResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.MBROfRegionResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.MBROfRegionResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Singlestring", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class Singlestring : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleArrayOfstring", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleArrayOfstring : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleSubRegionNameCodesResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleSubRegionNameCodesResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.SubRegionNameCodesResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.SubRegionNameCodesResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Singlebase64Binary", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class Singlebase64Binary : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleVietBandoPOI", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleVietBandoPOI : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.VietBandoPOI ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.VietBandoPOI Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleVietBandoPOI", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class MultipleVietBandoPOI : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMoreItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.VietBandoPOI[] ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMoreItem {
            get {
                return this.HasMoreItemField;
            }
            set {
                if ((this.HasMoreItemField.Equals(value) != true)) {
                    this.HasMoreItemField = value;
                    this.RaisePropertyChanged("HasMoreItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.VietBandoPOI[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleDirectionResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleDirectionResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.DirectionResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.DirectionResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleFindShortestPathOrderResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleFindShortestPathOrderResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.FindShortestPathOrderResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.FindShortestPathOrderResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleForecastTrackingGeoResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleForecastTrackingGeoResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ForecastTrackingGeoResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ForecastTrackingGeoResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleTrackingInformationResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleTrackingInformationResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.TrackingInformationResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.TrackingInformationResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleShortestPathWithBarriersResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleShortestPathWithBarriersResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleArrayOfPoint", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleArrayOfPoint : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleArrayOfArrayOfdouble", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleArrayOfArrayOfdouble : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleArrayOfdouble", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleArrayOfdouble : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Singleboolean", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class Singleboolean : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Multiplestring", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class Multiplestring : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMoreItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMoreItem {
            get {
                return this.HasMoreItemField;
            }
            set {
                if ((this.HasMoreItemField.Equals(value) != true)) {
                    this.HasMoreItemField = value;
                    this.RaisePropertyChanged("HasMoreItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleGeoCodingReponse", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleGeoCodingReponse : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.GeoCodingReponse ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.GeoCodingReponse Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleGroupCategory", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class MultipleGroupCategory : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMoreItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.GroupCategory[] ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMoreItem {
            get {
                return this.HasMoreItemField;
            }
            set {
                if ((this.HasMoreItemField.Equals(value) != true)) {
                    this.HasMoreItemField = value;
                    this.RaisePropertyChanged("HasMoreItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.GroupCategory[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultipleCategory", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class MultipleCategory : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMoreItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Category[] ListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMoreItem {
            get {
                return this.HasMoreItemField;
            }
            set {
                if ((this.HasMoreItemField.Equals(value) != true)) {
                    this.HasMoreItemField = value;
                    this.RaisePropertyChanged("HasMoreItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Category[] List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleCategory", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleCategory : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Category ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Category Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleGroupCategory", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleGroupCategory : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.GroupCategory ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.GroupCategory Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleRoadSpeedResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleRoadSpeedResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.RoadSpeedResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.RoadSpeedResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleBatchGetRoadSpeedReult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleBatchGetRoadSpeedReult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedReult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedReult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleReverseGeocodeResult", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.MessageType")]
    [System.SerializableAttribute()]
    public partial class SingleReverseGeocodeResult : MyMapProject.Library.vietbandoAPI.Response {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ReverseGeocodeResult ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ReverseGeocodeResult Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReverseGeocodeResult", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class ReverseGeocodeResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictID {
            get {
                return this.DistrictIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictIDField, value) != true)) {
                    this.DistrictIDField = value;
                    this.RaisePropertyChanged("DistrictID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceID {
            get {
                return this.ProvinceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceIDField, value) != true)) {
                    this.ProvinceIDField = value;
                    this.RaisePropertyChanged("ProvinceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ward {
            get {
                return this.WardField;
            }
            set {
                if ((object.ReferenceEquals(this.WardField, value) != true)) {
                    this.WardField = value;
                    this.RaisePropertyChanged("Ward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardID {
            get {
                return this.WardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WardIDField, value) != true)) {
                    this.WardIDField = value;
                    this.RaisePropertyChanged("WardID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchReverseGeocodingResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class BatchReverseGeocodingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrDistrictIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrProvinceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrWardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrWardIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrDistrict {
            get {
                return this.ArrDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrDistrictField, value) != true)) {
                    this.ArrDistrictField = value;
                    this.RaisePropertyChanged("ArrDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrDistrictID {
            get {
                return this.ArrDistrictIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrDistrictIDField, value) != true)) {
                    this.ArrDistrictIDField = value;
                    this.RaisePropertyChanged("ArrDistrictID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrProvince {
            get {
                return this.ArrProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrProvinceField, value) != true)) {
                    this.ArrProvinceField = value;
                    this.RaisePropertyChanged("ArrProvince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrProvinceID {
            get {
                return this.ArrProvinceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrProvinceIDField, value) != true)) {
                    this.ArrProvinceIDField = value;
                    this.RaisePropertyChanged("ArrProvinceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrStreet {
            get {
                return this.ArrStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrStreetField, value) != true)) {
                    this.ArrStreetField = value;
                    this.RaisePropertyChanged("ArrStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrWard {
            get {
                return this.ArrWardField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrWardField, value) != true)) {
                    this.ArrWardField = value;
                    this.RaisePropertyChanged("ArrWard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrWardID {
            get {
                return this.ArrWardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrWardIDField, value) != true)) {
                    this.ArrWardIDField = value;
                    this.RaisePropertyChanged("ArrWardID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MBROfRegionResult", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class MBROfRegionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BottomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double rightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bottom {
            get {
                return this.BottomField;
            }
            set {
                if ((this.BottomField.Equals(value) != true)) {
                    this.BottomField = value;
                    this.RaisePropertyChanged("Bottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Left {
            get {
                return this.LeftField;
            }
            set {
                if ((this.LeftField.Equals(value) != true)) {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double right {
            get {
                return this.rightField;
            }
            set {
                if ((this.rightField.Equals(value) != true)) {
                    this.rightField = value;
                    this.RaisePropertyChanged("right");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubRegionNameCodesResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class SubRegionNameCodesResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ArrSubCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrName {
            get {
                return this.ArrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrNameField, value) != true)) {
                    this.ArrNameField = value;
                    this.RaisePropertyChanged("ArrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ArrSubCode {
            get {
                return this.ArrSubCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrSubCodeField, value) != true)) {
                    this.ArrSubCodeField = value;
                    this.RaisePropertyChanged("ArrSubCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VietBandoPOI", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class VietBandoPOI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VietbandoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((object.ReferenceEquals(this.FloorField, value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((this.GroupCodeField.Equals(value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VietbandoId {
            get {
                return this.VietbandoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VietbandoIdField, value) != true)) {
                    this.VietbandoIdField = value;
                    this.RaisePropertyChanged("VietbandoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ward {
            get {
                return this.WardField;
            }
            set {
                if ((object.ReferenceEquals(this.WardField, value) != true)) {
                    this.WardField = value;
                    this.RaisePropertyChanged("Ward");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectionResult", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class DirectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][][] FullPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PathLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] RealPlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ShortestPath ResultScriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SegmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][][] FullPath {
            get {
                return this.FullPathField;
            }
            set {
                if ((object.ReferenceEquals(this.FullPathField, value) != true)) {
                    this.FullPathField = value;
                    this.RaisePropertyChanged("FullPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PathLength {
            get {
                return this.PathLengthField;
            }
            set {
                if ((this.PathLengthField.Equals(value) != true)) {
                    this.PathLengthField = value;
                    this.RaisePropertyChanged("PathLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] RealPlaces {
            get {
                return this.RealPlacesField;
            }
            set {
                if ((object.ReferenceEquals(this.RealPlacesField, value) != true)) {
                    this.RealPlacesField = value;
                    this.RaisePropertyChanged("RealPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ShortestPath ResultScript {
            get {
                return this.ResultScriptField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultScriptField, value) != true)) {
                    this.ResultScriptField = value;
                    this.RaisePropertyChanged("ResultScript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentsField, value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortestPath", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.Web.Library")]
    [System.SerializableAttribute()]
    public partial class ShortestPath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ShortestPathLeg[] LegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ShortestPathLeg[] Leg {
            get {
                return this.LegField;
            }
            set {
                if ((object.ReferenceEquals(this.LegField, value) != true)) {
                    this.LegField = value;
                    this.RaisePropertyChanged("Leg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double len {
            get {
                return this.lenField;
            }
            set {
                if ((this.lenField.Equals(value) != true)) {
                    this.lenField = value;
                    this.RaisePropertyChanged("len");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortestPathLeg", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.Web.Library")]
    [System.SerializableAttribute()]
    public partial class ShortestPathLeg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.ShortestPathLegStep[] StepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double endXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double endYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool foundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double startXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double startYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.ShortestPathLegStep[] Step {
            get {
                return this.StepField;
            }
            set {
                if ((object.ReferenceEquals(this.StepField, value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double endX {
            get {
                return this.endXField;
            }
            set {
                if ((this.endXField.Equals(value) != true)) {
                    this.endXField = value;
                    this.RaisePropertyChanged("endX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double endY {
            get {
                return this.endYField;
            }
            set {
                if ((this.endYField.Equals(value) != true)) {
                    this.endYField = value;
                    this.RaisePropertyChanged("endY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool found {
            get {
                return this.foundField;
            }
            set {
                if ((this.foundField.Equals(value) != true)) {
                    this.foundField = value;
                    this.RaisePropertyChanged("found");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double len {
            get {
                return this.lenField;
            }
            set {
                if ((this.lenField.Equals(value) != true)) {
                    this.lenField = value;
                    this.RaisePropertyChanged("len");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double startX {
            get {
                return this.startXField;
            }
            set {
                if ((this.startXField.Equals(value) != true)) {
                    this.startXField = value;
                    this.RaisePropertyChanged("startX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double startY {
            get {
                return this.startYField;
            }
            set {
                if ((this.startYField.Equals(value) != true)) {
                    this.startYField = value;
                    this.RaisePropertyChanged("startY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortestPathLegStep", Namespace="http://schemas.datacontract.org/2004/07/Vietbando.Web.Library")]
    [System.SerializableAttribute()]
    public partial class ShortestPathLegStep : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int angleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int startField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int angle {
            get {
                return this.angleField;
            }
            set {
                if ((this.angleField.Equals(value) != true)) {
                    this.angleField = value;
                    this.RaisePropertyChanged("angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dir {
            get {
                return this.dirField;
            }
            set {
                if ((object.ReferenceEquals(this.dirField, value) != true)) {
                    this.dirField = value;
                    this.RaisePropertyChanged("dir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double len {
            get {
                return this.lenField;
            }
            set {
                if ((this.lenField.Equals(value) != true)) {
                    this.lenField = value;
                    this.RaisePropertyChanged("len");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int start {
            get {
                return this.startField;
            }
            set {
                if ((this.startField.Equals(value) != true)) {
                    this.startField = value;
                    this.RaisePropertyChanged("start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindShortestPathOrderResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class FindShortestPathOrderResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double[][] CoorsField;
        
        private int[] IndicesField;
        
        private int[][] InstructionDirsField;
        
        private double[][] InstructionDistancesField;
        
        private string[][] InstructionNamesField;
        
        private double[] RealPlacesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double[][] Coors {
            get {
                return this.CoorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CoorsField, value) != true)) {
                    this.CoorsField = value;
                    this.RaisePropertyChanged("Coors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[] Indices {
            get {
                return this.IndicesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicesField, value) != true)) {
                    this.IndicesField = value;
                    this.RaisePropertyChanged("Indices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int[][] InstructionDirs {
            get {
                return this.InstructionDirsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionDirsField, value) != true)) {
                    this.InstructionDirsField = value;
                    this.RaisePropertyChanged("InstructionDirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double[][] InstructionDistances {
            get {
                return this.InstructionDistancesField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionDistancesField, value) != true)) {
                    this.InstructionDistancesField = value;
                    this.RaisePropertyChanged("InstructionDistances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[][] InstructionNames {
            get {
                return this.InstructionNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionNamesField, value) != true)) {
                    this.InstructionNamesField = value;
                    this.RaisePropertyChanged("InstructionNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double[] RealPlaces {
            get {
                return this.RealPlacesField;
            }
            set {
                if ((object.ReferenceEquals(this.RealPlacesField, value) != true)) {
                    this.RealPlacesField = value;
                    this.RaisePropertyChanged("RealPlaces");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForecastTrackingGeoResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class ForecastTrackingGeoResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ForcastSignIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] ForcastingDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] LatitudesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] LongtitudesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MaxSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MinSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RoadNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictId {
            get {
                return this.DistrictIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictIdField, value) != true)) {
                    this.DistrictIdField = value;
                    this.RaisePropertyChanged("DistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ForcastSignIDs {
            get {
                return this.ForcastSignIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ForcastSignIDsField, value) != true)) {
                    this.ForcastSignIDsField = value;
                    this.RaisePropertyChanged("ForcastSignIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] ForcastingDistance {
            get {
                return this.ForcastingDistanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ForcastingDistanceField, value) != true)) {
                    this.ForcastingDistanceField = value;
                    this.RaisePropertyChanged("ForcastingDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Latitudes {
            get {
                return this.LatitudesField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudesField, value) != true)) {
                    this.LatitudesField = value;
                    this.RaisePropertyChanged("Latitudes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Longtitudes {
            get {
                return this.LongtitudesField;
            }
            set {
                if ((object.ReferenceEquals(this.LongtitudesField, value) != true)) {
                    this.LongtitudesField = value;
                    this.RaisePropertyChanged("Longtitudes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MaxSpeeds {
            get {
                return this.MaxSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSpeedsField, value) != true)) {
                    this.MaxSpeedsField = value;
                    this.RaisePropertyChanged("MaxSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MinSpeeds {
            get {
                return this.MinSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MinSpeedsField, value) != true)) {
                    this.MinSpeedsField = value;
                    this.RaisePropertyChanged("MinSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceId {
            get {
                return this.ProvinceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceIdField, value) != true)) {
                    this.ProvinceIdField = value;
                    this.RaisePropertyChanged("ProvinceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RoadNames {
            get {
                return this.RoadNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadNamesField, value) != true)) {
                    this.RoadNamesField = value;
                    this.RaisePropertyChanged("RoadNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapX {
            get {
                return this.SnapXField;
            }
            set {
                if ((this.SnapXField.Equals(value) != true)) {
                    this.SnapXField = value;
                    this.RaisePropertyChanged("SnapX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapY {
            get {
                return this.SnapYField;
            }
            set {
                if ((this.SnapYField.Equals(value) != true)) {
                    this.SnapYField = value;
                    this.RaisePropertyChanged("SnapY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpeedMax {
            get {
                return this.SpeedMaxField;
            }
            set {
                if ((this.SpeedMaxField.Equals(value) != true)) {
                    this.SpeedMaxField = value;
                    this.RaisePropertyChanged("SpeedMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpeedMin {
            get {
                return this.SpeedMinField;
            }
            set {
                if ((this.SpeedMinField.Equals(value) != true)) {
                    this.SpeedMinField = value;
                    this.RaisePropertyChanged("SpeedMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardId {
            get {
                return this.WardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WardIdField, value) != true)) {
                    this.WardIdField = value;
                    this.RaisePropertyChanged("WardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardName {
            get {
                return this.WardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WardNameField, value) != true)) {
                    this.WardNameField = value;
                    this.RaisePropertyChanged("WardName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingInformationResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class TrackingInformationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictId {
            get {
                return this.DistrictIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictIdField, value) != true)) {
                    this.DistrictIdField = value;
                    this.RaisePropertyChanged("DistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinSpeed {
            get {
                return this.MinSpeedField;
            }
            set {
                if ((this.MinSpeedField.Equals(value) != true)) {
                    this.MinSpeedField = value;
                    this.RaisePropertyChanged("MinSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceId {
            get {
                return this.ProvinceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceIdField, value) != true)) {
                    this.ProvinceIdField = value;
                    this.RaisePropertyChanged("ProvinceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapX {
            get {
                return this.SnapXField;
            }
            set {
                if ((this.SnapXField.Equals(value) != true)) {
                    this.SnapXField = value;
                    this.RaisePropertyChanged("SnapX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapY {
            get {
                return this.SnapYField;
            }
            set {
                if ((this.SnapYField.Equals(value) != true)) {
                    this.SnapYField = value;
                    this.RaisePropertyChanged("SnapY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardId {
            get {
                return this.WardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WardIdField, value) != true)) {
                    this.WardIdField = value;
                    this.RaisePropertyChanged("WardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardName {
            get {
                return this.WardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WardNameField, value) != true)) {
                    this.WardNameField = value;
                    this.RaisePropertyChanged("WardName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortestPathWithBarriersResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class ShortestPathWithBarriersResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArrivalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] CoorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] IndicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[][] InstructionDirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PathLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] RealPlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScriptField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ArrivalTime {
            get {
                return this.ArrivalTimeField;
            }
            set {
                if ((this.ArrivalTimeField.Equals(value) != true)) {
                    this.ArrivalTimeField = value;
                    this.RaisePropertyChanged("ArrivalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] Coors {
            get {
                return this.CoorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CoorsField, value) != true)) {
                    this.CoorsField = value;
                    this.RaisePropertyChanged("Coors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Indices {
            get {
                return this.IndicesField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicesField, value) != true)) {
                    this.IndicesField = value;
                    this.RaisePropertyChanged("Indices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[][] InstructionDirs {
            get {
                return this.InstructionDirsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionDirsField, value) != true)) {
                    this.InstructionDirsField = value;
                    this.RaisePropertyChanged("InstructionDirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PathLength {
            get {
                return this.PathLengthField;
            }
            set {
                if ((this.PathLengthField.Equals(value) != true)) {
                    this.PathLengthField = value;
                    this.RaisePropertyChanged("PathLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] RealPlaces {
            get {
                return this.RealPlacesField;
            }
            set {
                if ((object.ReferenceEquals(this.RealPlacesField, value) != true)) {
                    this.RealPlacesField = value;
                    this.RaisePropertyChanged("RealPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Script {
            get {
                return this.ScriptField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptField, value) != true)) {
                    this.ScriptField = value;
                    this.RaisePropertyChanged("Script");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoCodingReponse", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GeoCodingReponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentageMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.VietBandoPOI ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PercentageMatch {
            get {
                return this.PercentageMatchField;
            }
            set {
                if ((this.PercentageMatchField.Equals(value) != true)) {
                    this.PercentageMatchField = value;
                    this.RaisePropertyChanged("PercentageMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.VietBandoPOI Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupCategory", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GroupCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Category[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupVField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Category[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((this.GroupCodeField.Equals(value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupE {
            get {
                return this.GroupEField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupEField, value) != true)) {
                    this.GroupEField = value;
                    this.RaisePropertyChanged("GroupE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupV {
            get {
                return this.GroupVField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupVField, value) != true)) {
                    this.GroupVField = value;
                    this.RaisePropertyChanged("GroupV");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameVField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((this.GroupCodeField.Equals(value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameE {
            get {
                return this.NameEField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEField, value) != true)) {
                    this.NameEField = value;
                    this.RaisePropertyChanged("NameE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameV {
            get {
                return this.NameVField;
            }
            set {
                if ((object.ReferenceEquals(this.NameVField, value) != true)) {
                    this.NameVField = value;
                    this.RaisePropertyChanged("NameV");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoadSpeedResult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class RoadSpeedResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MaxSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MinSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SnapYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictId {
            get {
                return this.DistrictIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictIdField, value) != true)) {
                    this.DistrictIdField = value;
                    this.RaisePropertyChanged("DistrictId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MaxSpeeds {
            get {
                return this.MaxSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSpeedsField, value) != true)) {
                    this.MaxSpeedsField = value;
                    this.RaisePropertyChanged("MaxSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MinSpeeds {
            get {
                return this.MinSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MinSpeedsField, value) != true)) {
                    this.MinSpeedsField = value;
                    this.RaisePropertyChanged("MinSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceId {
            get {
                return this.ProvinceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceIdField, value) != true)) {
                    this.ProvinceIdField = value;
                    this.RaisePropertyChanged("ProvinceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapX {
            get {
                return this.SnapXField;
            }
            set {
                if ((this.SnapXField.Equals(value) != true)) {
                    this.SnapXField = value;
                    this.RaisePropertyChanged("SnapX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SnapY {
            get {
                return this.SnapYField;
            }
            set {
                if ((this.SnapYField.Equals(value) != true)) {
                    this.SnapYField = value;
                    this.RaisePropertyChanged("SnapY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardId {
            get {
                return this.WardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WardIdField, value) != true)) {
                    this.WardIdField = value;
                    this.RaisePropertyChanged("WardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WardName {
            get {
                return this.WardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WardNameField, value) != true)) {
                    this.WardNameField = value;
                    this.RaisePropertyChanged("WardName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchGetRoadSpeedReult", Namespace="http://schemas.datacontract.org/2004/07/PartnerPortalStructures")]
    [System.SerializableAttribute()]
    public partial class BatchGetRoadSpeedReult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MaxSpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] MinSpeedsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MaxSpeeds {
            get {
                return this.MaxSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSpeedsField, value) != true)) {
                    this.MaxSpeedsField = value;
                    this.RaisePropertyChanged("MaxSpeeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] MinSpeeds {
            get {
                return this.MinSpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.MinSpeedsField, value) != true)) {
                    this.MinSpeedsField = value;
                    this.RaisePropertyChanged("MinSpeeds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionColor", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class RegionColor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BorderColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BorderWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BorderColor {
            get {
                return this.BorderColorField;
            }
            set {
                if ((this.BorderColorField.Equals(value) != true)) {
                    this.BorderColorField = value;
                    this.RaisePropertyChanged("BorderColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BorderWidth {
            get {
                return this.BorderWidthField;
            }
            set {
                if ((this.BorderWidthField.Equals(value) != true)) {
                    this.BorderWidthField = value;
                    this.RaisePropertyChanged("BorderWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillColor {
            get {
                return this.FillColorField;
            }
            set {
                if ((this.FillColorField.Equals(value) != true)) {
                    this.FillColorField = value;
                    this.RaisePropertyChanged("FillColor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportType", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    public enum TransportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Walk = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bike = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Car = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Truck = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Emergency = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReverseGeocodeRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class ReverseGeocodeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchReverGeocodeRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class BatchReverGeocodeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetThumbnailOfRegionRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetThumbnailOfRegionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.RegionColor RegionColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultColor {
            get {
                return this.DefaultColorField;
            }
            set {
                if ((this.DefaultColorField.Equals(value) != true)) {
                    this.DefaultColorField = value;
                    this.RaisePropertyChanged("DefaultColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImgType {
            get {
                return this.ImgTypeField;
            }
            set {
                if ((this.ImgTypeField.Equals(value) != true)) {
                    this.ImgTypeField = value;
                    this.RaisePropertyChanged("ImgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.RegionColor RegionColor {
            get {
                return this.RegionColorField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionColorField, value) != true)) {
                    this.RegionColorField = value;
                    this.RaisePropertyChanged("RegionColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNearestObjectsRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetNearestObjectsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FindShortestPathRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class FindShortestPathRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlleyAvoidanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.TransportType TransportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlleyAvoidance {
            get {
                return this.AlleyAvoidanceField;
            }
            set {
                if ((this.AlleyAvoidanceField.Equals(value) != true)) {
                    this.AlleyAvoidanceField = value;
                    this.RaisePropertyChanged("AlleyAvoidance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.TransportType TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ForecastRoadsByTrafficSignRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class ForecastRoadsByTrafficSignRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingInformationRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class TrackingInformationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point CurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point PrePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point CurPoint {
            get {
                return this.CurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.CurPointField, value) != true)) {
                    this.CurPointField = value;
                    this.RaisePropertyChanged("CurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point PrePoint {
            get {
                return this.PrePointField;
            }
            set {
                if ((object.ReferenceEquals(this.PrePointField, value) != true)) {
                    this.PrePointField = value;
                    this.RaisePropertyChanged("PrePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortestPathWithBarriersRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class ShortestPathWithBarriersRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] BarriersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DepartureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] TimeRangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VehicleWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.TransportType transportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Barriers {
            get {
                return this.BarriersField;
            }
            set {
                if ((object.ReferenceEquals(this.BarriersField, value) != true)) {
                    this.BarriersField = value;
                    this.RaisePropertyChanged("Barriers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DepartureTime {
            get {
                return this.DepartureTimeField;
            }
            set {
                if ((this.DepartureTimeField.Equals(value) != true)) {
                    this.DepartureTimeField = value;
                    this.RaisePropertyChanged("DepartureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] TimeRanges {
            get {
                return this.TimeRangesField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeRangesField, value) != true)) {
                    this.TimeRangesField = value;
                    this.RaisePropertyChanged("TimeRanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VehicleWeight {
            get {
                return this.VehicleWeightField;
            }
            set {
                if ((this.VehicleWeightField.Equals(value) != true)) {
                    this.VehicleWeightField = value;
                    this.RaisePropertyChanged("VehicleWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.TransportType transportType {
            get {
                return this.transportTypeField;
            }
            set {
                if ((this.transportTypeField.Equals(value) != true)) {
                    this.transportTypeField = value;
                    this.RaisePropertyChanged("transportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnapToStreetRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class SnapToStreetRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] PointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDistancesRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetDistancesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlleyAvoidanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] DestinationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] SoursesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.TransportType TransportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlleyAvoidance {
            get {
                return this.AlleyAvoidanceField;
            }
            set {
                if ((this.AlleyAvoidanceField.Equals(value) != true)) {
                    this.AlleyAvoidanceField = value;
                    this.RaisePropertyChanged("AlleyAvoidance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Destinations {
            get {
                return this.DestinationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationsField, value) != true)) {
                    this.DestinationsField = value;
                    this.RaisePropertyChanged("Destinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Sourses {
            get {
                return this.SoursesField;
            }
            set {
                if ((object.ReferenceEquals(this.SoursesField, value) != true)) {
                    this.SoursesField = value;
                    this.RaisePropertyChanged("Sourses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.TransportType TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDistancesOnPathsRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetDistancesOnPathsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlleyAvoidanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] DestinationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReverseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.TransportType TransportTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlleyAvoidance {
            get {
                return this.AlleyAvoidanceField;
            }
            set {
                if ((this.AlleyAvoidanceField.Equals(value) != true)) {
                    this.AlleyAvoidanceField = value;
                    this.RaisePropertyChanged("AlleyAvoidance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Destinations {
            get {
                return this.DestinationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationsField, value) != true)) {
                    this.DestinationsField = value;
                    this.RaisePropertyChanged("Destinations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReverse {
            get {
                return this.IsReverseField;
            }
            set {
                if ((this.IsReverseField.Equals(value) != true)) {
                    this.IsReverseField = value;
                    this.RaisePropertyChanged("IsReverse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.TransportType TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((this.TransportTypeField.Equals(value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPointInShapeRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class CheckPointInShapeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] ShapeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Shape {
            get {
                return this.ShapeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShapeField, value) != true)) {
                    this.ShapeField = value;
                    this.RaisePropertyChanged("Shape");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchAllRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyMapProject.Library.vietbandoAPI.SearchAllWithCategoryFilterRequest))]
    public partial class SearchAllRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOrder {
            get {
                return this.IsOrderField;
            }
            set {
                if ((this.IsOrderField.Equals(value) != true)) {
                    this.IsOrderField = value;
                    this.RaisePropertyChanged("IsOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lx {
            get {
                return this.LxField;
            }
            set {
                if ((this.LxField.Equals(value) != true)) {
                    this.LxField = value;
                    this.RaisePropertyChanged("Lx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ly {
            get {
                return this.LyField;
            }
            set {
                if ((this.LyField.Equals(value) != true)) {
                    this.LyField = value;
                    this.RaisePropertyChanged("Ly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rx {
            get {
                return this.RxField;
            }
            set {
                if ((this.RxField.Equals(value) != true)) {
                    this.RxField = value;
                    this.RaisePropertyChanged("Rx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ry {
            get {
                return this.RyField;
            }
            set {
                if ((this.RyField.Equals(value) != true)) {
                    this.RyField = value;
                    this.RaisePropertyChanged("Ry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchAllWithCategoryFilterRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class SearchAllWithCategoryFilterRequest : MyMapProject.Library.vietbandoAPI.SearchAllRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchNearByRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class SearchNearByRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RadiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoSuggestSearchRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class AutoSuggestSearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoCodingRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GeoCodingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllGroupCategoriesRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetAllGroupCategoriesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGetCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGetCategory {
            get {
                return this.IsGetCategoryField;
            }
            set {
                if ((this.IsGetCategoryField.Equals(value) != true)) {
                    this.IsGetCategoryField = value;
                    this.RaisePropertyChanged("IsGetCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCategoriesInGroupRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetCategoriesInGroupRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((this.GroupCodeField.Equals(value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCategoryDetailRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetCategoryDetailRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGroupCategoryDetailRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetGroupCategoryDetailRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGetCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((this.GroupCodeField.Equals(value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGetCategory {
            get {
                return this.IsGetCategoryField;
            }
            set {
                if ((this.IsGetCategoryField.Equals(value) != true)) {
                    this.IsGetCategoryField = value;
                    this.RaisePropertyChanged("IsGetCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPointInViolationRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class CheckPointInViolationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRoadSpeedRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class GetRoadSpeedRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Heading {
            get {
                return this.HeadingField;
            }
            set {
                if ((this.HeadingField.Equals(value) != true)) {
                    this.HeadingField = value;
                    this.RaisePropertyChanged("Heading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchGetRoadSpeedRequest", Namespace="http://schemas.datacontract.org/2004/07/PP.Services")]
    [System.SerializableAttribute()]
    public partial class BatchGetRoadSpeedRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] HeadingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMapProject.Library.vietbandoAPI.Point[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] SpeedsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] TransportTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int radiusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Headings {
            get {
                return this.HeadingsField;
            }
            set {
                if ((object.ReferenceEquals(this.HeadingsField, value) != true)) {
                    this.HeadingsField = value;
                    this.RaisePropertyChanged("Headings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMapProject.Library.vietbandoAPI.Point[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Speeds {
            get {
                return this.SpeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedsField, value) != true)) {
                    this.SpeedsField = value;
                    this.RaisePropertyChanged("Speeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] TransportTypes {
            get {
                return this.TransportTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportTypesField, value) != true)) {
                    this.TransportTypesField = value;
                    this.RaisePropertyChanged("TransportTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int radius {
            get {
                return this.radiusField;
            }
            set {
                if ((this.radiusField.Equals(value) != true)) {
                    this.radiusField = value;
                    this.RaisePropertyChanged("radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="vietbandoAPI.IPartnerPortalRestService")]
    public interface IPartnerPortalRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/ReverseGeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/ReverseGeoCoding_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult ReverseGeoCoding_Rest(MyMapProject.Library.vietbandoAPI.ReverseGeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/ReverseGeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/ReverseGeoCoding_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult> ReverseGeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.ReverseGeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/BatchReverseGeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/BatchReverseGeoCoding_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult BatchReverseGeoCoding_Rest(MyMapProject.Library.vietbandoAPI.BatchReverGeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/BatchReverseGeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/BatchReverseGeoCoding_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult> BatchReverseGeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.BatchReverGeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCentroidOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCentroidOfRegion_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SinglePoint GetCentroidOfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCentroidOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCentroidOfRegion_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SinglePoint> GetCentroidOfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetMBROfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetMBROfRegion_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult GetMBROfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetMBROfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetMBROfRegion_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult> GetMBROfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetNameOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetNameOfRegion_RestResponse")]
        MyMapProject.Library.vietbandoAPI.Singlestring GetNameOfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetNameOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetNameOfRegion_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlestring> GetNameOfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionCodesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionCodesOfRegion_RestRespon" +
            "se")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionCodesOfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionCodesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionCodesOfRegion_RestRespon" +
            "se")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionCodesOfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNamesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNamesOfRegion_RestRespon" +
            "se")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionNamesOfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNamesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNamesOfRegion_RestRespon" +
            "se")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionNamesOfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNameCodesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNameCodesOfRegion_RestRe" +
            "sponse")]
        MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult GetSubRegionNameCodesOfRegion_Rest(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNameCodesOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetSubRegionNameCodesOfRegion_RestRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult> GetSubRegionNameCodesOfRegion_RestAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetThumbnailOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetThumbnailOfRegion_RestResponse")]
        MyMapProject.Library.vietbandoAPI.Singlebase64Binary GetThumbnailOfRegion_Rest(MyMapProject.Library.vietbandoAPI.GetThumbnailOfRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetThumbnailOfRegion_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetThumbnailOfRegion_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlebase64Binary> GetThumbnailOfRegion_RestAsync(MyMapProject.Library.vietbandoAPI.GetThumbnailOfRegionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/WhatHere_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/WhatHere_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI WhatHere_Rest(MyMapProject.Library.vietbandoAPI.Point request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/WhatHere_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/WhatHere_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI> WhatHere_RestAsync(MyMapProject.Library.vietbandoAPI.Point request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetNearestObjects_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetNearestObjects_RestResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI GetNearestObjects_Rest(MyMapProject.Library.vietbandoAPI.GetNearestObjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetNearestObjects_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetNearestObjects_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> GetNearestObjects_RestAsync(MyMapProject.Library.vietbandoAPI.GetNearestObjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestPath_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestPath_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleDirectionResult FindShortestPath_Rest(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestPath_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestPath_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleDirectionResult> FindShortestPath_RestAsync(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestPathOrderFull_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestPathOrderFull_RestRespon" +
            "se")]
        MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult FindShortestPathOrderFull_Rest(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestPathOrderFull_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestPathOrderFull_RestRespon" +
            "se")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult> FindShortestPathOrderFull_RestAsync(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/ForecastRoadsByTrafficSign_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/ForecastRoadsByTrafficSign_RestRespo" +
            "nse")]
        MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult ForecastRoadsByTrafficSign_Rest(MyMapProject.Library.vietbandoAPI.ForecastRoadsByTrafficSignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/ForecastRoadsByTrafficSign_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/ForecastRoadsByTrafficSign_RestRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult> ForecastRoadsByTrafficSign_RestAsync(MyMapProject.Library.vietbandoAPI.ForecastRoadsByTrafficSignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetTrackingInformation_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetTrackingInformation_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult GetTrackingInformation_Rest(MyMapProject.Library.vietbandoAPI.TrackingInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetTrackingInformation_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetTrackingInformation_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult> GetTrackingInformation_RestAsync(MyMapProject.Library.vietbandoAPI.TrackingInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestWithBarriers_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestWithBarriers_RestRespons" +
            "e")]
        MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult FindShortestWithBarriers_Rest(MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/FindShortestWithBarriers_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/FindShortestWithBarriers_RestRespons" +
            "e")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult> FindShortestWithBarriers_RestAsync(MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SnapToStreet_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SnapToStreet_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint SnapToStreet_Rest(MyMapProject.Library.vietbandoAPI.SnapToStreetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SnapToStreet_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SnapToStreet_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint> SnapToStreet_RestAsync(MyMapProject.Library.vietbandoAPI.SnapToStreetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetDistances_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetDistances_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble GetDistances_Rest(MyMapProject.Library.vietbandoAPI.GetDistancesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetDistances_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetDistances_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble> GetDistances_RestAsync(MyMapProject.Library.vietbandoAPI.GetDistancesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetDistancesOnPaths_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetDistancesOnPaths_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble GetDistancesOnPaths_Rest(MyMapProject.Library.vietbandoAPI.GetDistancesOnPathsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetDistancesOnPaths_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetDistancesOnPaths_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble> GetDistancesOnPaths_RestAsync(MyMapProject.Library.vietbandoAPI.GetDistancesOnPathsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/CheckPointInShape_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/CheckPointInShape_RestResponse")]
        MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInShape_Rest(MyMapProject.Library.vietbandoAPI.CheckPointInShapeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/CheckPointInShape_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/CheckPointInShape_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInShape_RestAsync(MyMapProject.Library.vietbandoAPI.CheckPointInShapeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchAll_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchAll_RestResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAll_Rest(MyMapProject.Library.vietbandoAPI.SearchAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchAll_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchAll_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAll_RestAsync(MyMapProject.Library.vietbandoAPI.SearchAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchAllWithCategoryFilter_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchAllWithCategoryFilter_RestResp" +
            "onse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAllWithCategoryFilter_Rest(MyMapProject.Library.vietbandoAPI.SearchAllWithCategoryFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchAllWithCategoryFilter_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchAllWithCategoryFilter_RestResp" +
            "onse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllWithCategoryFilter_RestAsync(MyMapProject.Library.vietbandoAPI.SearchAllWithCategoryFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchNearBy_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchNearBy_RestResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchNearBy_Rest(MyMapProject.Library.vietbandoAPI.SearchNearByRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/SearchNearBy_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/SearchNearBy_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchNearBy_RestAsync(MyMapProject.Library.vietbandoAPI.SearchNearByRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/AutoSuggestSearch_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/AutoSuggestSearch_RestResponse")]
        MyMapProject.Library.vietbandoAPI.Multiplestring AutoSuggestSearch_Rest(MyMapProject.Library.vietbandoAPI.AutoSuggestSearchRequest keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/AutoSuggestSearch_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/AutoSuggestSearch_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Multiplestring> AutoSuggestSearch_RestAsync(MyMapProject.Library.vietbandoAPI.AutoSuggestSearchRequest keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GeoCoding_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse GeoCoding_Rest(MyMapProject.Library.vietbandoAPI.GeoCodingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GeoCoding_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GeoCoding_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse> GeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.GeoCodingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetAllGroupCategories_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetAllGroupCategories_RestResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleGroupCategory GetAllGroupCategories_Rest(MyMapProject.Library.vietbandoAPI.GetAllGroupCategoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetAllGroupCategories_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetAllGroupCategories_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleGroupCategory> GetAllGroupCategories_RestAsync(MyMapProject.Library.vietbandoAPI.GetAllGroupCategoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCategoriesInGroup_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCategoriesInGroup_RestResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleCategory GetCategoriesInGroup_Rest(MyMapProject.Library.vietbandoAPI.GetCategoriesInGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCategoriesInGroup_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCategoriesInGroup_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleCategory> GetCategoriesInGroup_RestAsync(MyMapProject.Library.vietbandoAPI.GetCategoriesInGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCategoryDetail_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCategoryDetail_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleCategory GetCategoryDetail_Rest(MyMapProject.Library.vietbandoAPI.GetCategoryDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetCategoryDetail_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetCategoryDetail_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleCategory> GetCategoryDetail_RestAsync(MyMapProject.Library.vietbandoAPI.GetCategoryDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetGroupCategoryDetail_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetGroupCategoryDetail_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleGroupCategory GetGroupCategoryDetail_Rest(MyMapProject.Library.vietbandoAPI.GetGroupCategoryDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetGroupCategoryDetail_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetGroupCategoryDetail_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGroupCategory> GetGroupCategoryDetail_RestAsync(MyMapProject.Library.vietbandoAPI.GetGroupCategoryDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/CheckPointInViolation_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/CheckPointInViolation_RestResponse")]
        MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInViolation_Rest(MyMapProject.Library.vietbandoAPI.CheckPointInViolationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/CheckPointInViolation_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/CheckPointInViolation_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInViolation_RestAsync(MyMapProject.Library.vietbandoAPI.CheckPointInViolationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetRoadSpeed_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetRoadSpeed_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult GetRoadSpeed_Rest(MyMapProject.Library.vietbandoAPI.GetRoadSpeedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/GetRoadSpeed_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/GetRoadSpeed_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult> GetRoadSpeed_RestAsync(MyMapProject.Library.vietbandoAPI.GetRoadSpeedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/BatchGetRoadSpeed_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/BatchGetRoadSpeed_RestResponse")]
        MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult BatchGetRoadSpeed_Rest(MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalRestService/BatchGetRoadSpeed_Rest", ReplyAction="http://tempuri.org/IPartnerPortalRestService/BatchGetRoadSpeed_RestResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult> BatchGetRoadSpeed_RestAsync(MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPartnerPortalRestServiceChannel : MyMapProject.Library.vietbandoAPI.IPartnerPortalRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartnerPortalRestServiceClient : System.ServiceModel.ClientBase<MyMapProject.Library.vietbandoAPI.IPartnerPortalRestService>, MyMapProject.Library.vietbandoAPI.IPartnerPortalRestService {
        
        public PartnerPortalRestServiceClient() {
        }
        
        public PartnerPortalRestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PartnerPortalRestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerPortalRestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerPortalRestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult ReverseGeoCoding_Rest(MyMapProject.Library.vietbandoAPI.ReverseGeocodeRequest request) {
            return base.Channel.ReverseGeoCoding_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult> ReverseGeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.ReverseGeocodeRequest request) {
            return base.Channel.ReverseGeoCoding_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult BatchReverseGeoCoding_Rest(MyMapProject.Library.vietbandoAPI.BatchReverGeocodeRequest request) {
            return base.Channel.BatchReverseGeoCoding_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult> BatchReverseGeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.BatchReverGeocodeRequest request) {
            return base.Channel.BatchReverseGeoCoding_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SinglePoint GetCentroidOfRegion_Rest(string code) {
            return base.Channel.GetCentroidOfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SinglePoint> GetCentroidOfRegion_RestAsync(string code) {
            return base.Channel.GetCentroidOfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult GetMBROfRegion_Rest(string code) {
            return base.Channel.GetMBROfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult> GetMBROfRegion_RestAsync(string code) {
            return base.Channel.GetMBROfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singlestring GetNameOfRegion_Rest(string code) {
            return base.Channel.GetNameOfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlestring> GetNameOfRegion_RestAsync(string code) {
            return base.Channel.GetNameOfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionCodesOfRegion_Rest(string code) {
            return base.Channel.GetSubRegionCodesOfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionCodesOfRegion_RestAsync(string code) {
            return base.Channel.GetSubRegionCodesOfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionNamesOfRegion_Rest(string code) {
            return base.Channel.GetSubRegionNamesOfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionNamesOfRegion_RestAsync(string code) {
            return base.Channel.GetSubRegionNamesOfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult GetSubRegionNameCodesOfRegion_Rest(string code) {
            return base.Channel.GetSubRegionNameCodesOfRegion_Rest(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult> GetSubRegionNameCodesOfRegion_RestAsync(string code) {
            return base.Channel.GetSubRegionNameCodesOfRegion_RestAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singlebase64Binary GetThumbnailOfRegion_Rest(MyMapProject.Library.vietbandoAPI.GetThumbnailOfRegionRequest request) {
            return base.Channel.GetThumbnailOfRegion_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlebase64Binary> GetThumbnailOfRegion_RestAsync(MyMapProject.Library.vietbandoAPI.GetThumbnailOfRegionRequest request) {
            return base.Channel.GetThumbnailOfRegion_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI WhatHere_Rest(MyMapProject.Library.vietbandoAPI.Point request) {
            return base.Channel.WhatHere_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI> WhatHere_RestAsync(MyMapProject.Library.vietbandoAPI.Point request) {
            return base.Channel.WhatHere_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI GetNearestObjects_Rest(MyMapProject.Library.vietbandoAPI.GetNearestObjectsRequest request) {
            return base.Channel.GetNearestObjects_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> GetNearestObjects_RestAsync(MyMapProject.Library.vietbandoAPI.GetNearestObjectsRequest request) {
            return base.Channel.GetNearestObjects_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleDirectionResult FindShortestPath_Rest(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request) {
            return base.Channel.FindShortestPath_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleDirectionResult> FindShortestPath_RestAsync(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request) {
            return base.Channel.FindShortestPath_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult FindShortestPathOrderFull_Rest(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request) {
            return base.Channel.FindShortestPathOrderFull_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult> FindShortestPathOrderFull_RestAsync(MyMapProject.Library.vietbandoAPI.FindShortestPathRequest request) {
            return base.Channel.FindShortestPathOrderFull_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult ForecastRoadsByTrafficSign_Rest(MyMapProject.Library.vietbandoAPI.ForecastRoadsByTrafficSignRequest request) {
            return base.Channel.ForecastRoadsByTrafficSign_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult> ForecastRoadsByTrafficSign_RestAsync(MyMapProject.Library.vietbandoAPI.ForecastRoadsByTrafficSignRequest request) {
            return base.Channel.ForecastRoadsByTrafficSign_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult GetTrackingInformation_Rest(MyMapProject.Library.vietbandoAPI.TrackingInformationRequest request) {
            return base.Channel.GetTrackingInformation_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult> GetTrackingInformation_RestAsync(MyMapProject.Library.vietbandoAPI.TrackingInformationRequest request) {
            return base.Channel.GetTrackingInformation_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult FindShortestWithBarriers_Rest(MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersRequest request) {
            return base.Channel.FindShortestWithBarriers_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult> FindShortestWithBarriers_RestAsync(MyMapProject.Library.vietbandoAPI.ShortestPathWithBarriersRequest request) {
            return base.Channel.FindShortestWithBarriers_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint SnapToStreet_Rest(MyMapProject.Library.vietbandoAPI.SnapToStreetRequest request) {
            return base.Channel.SnapToStreet_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint> SnapToStreet_RestAsync(MyMapProject.Library.vietbandoAPI.SnapToStreetRequest request) {
            return base.Channel.SnapToStreet_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble GetDistances_Rest(MyMapProject.Library.vietbandoAPI.GetDistancesRequest request) {
            return base.Channel.GetDistances_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble> GetDistances_RestAsync(MyMapProject.Library.vietbandoAPI.GetDistancesRequest request) {
            return base.Channel.GetDistances_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble GetDistancesOnPaths_Rest(MyMapProject.Library.vietbandoAPI.GetDistancesOnPathsRequest request) {
            return base.Channel.GetDistancesOnPaths_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble> GetDistancesOnPaths_RestAsync(MyMapProject.Library.vietbandoAPI.GetDistancesOnPathsRequest request) {
            return base.Channel.GetDistancesOnPaths_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInShape_Rest(MyMapProject.Library.vietbandoAPI.CheckPointInShapeRequest request) {
            return base.Channel.CheckPointInShape_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInShape_RestAsync(MyMapProject.Library.vietbandoAPI.CheckPointInShapeRequest request) {
            return base.Channel.CheckPointInShape_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAll_Rest(MyMapProject.Library.vietbandoAPI.SearchAllRequest request) {
            return base.Channel.SearchAll_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAll_RestAsync(MyMapProject.Library.vietbandoAPI.SearchAllRequest request) {
            return base.Channel.SearchAll_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAllWithCategoryFilter_Rest(MyMapProject.Library.vietbandoAPI.SearchAllWithCategoryFilterRequest request) {
            return base.Channel.SearchAllWithCategoryFilter_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllWithCategoryFilter_RestAsync(MyMapProject.Library.vietbandoAPI.SearchAllWithCategoryFilterRequest request) {
            return base.Channel.SearchAllWithCategoryFilter_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchNearBy_Rest(MyMapProject.Library.vietbandoAPI.SearchNearByRequest request) {
            return base.Channel.SearchNearBy_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchNearBy_RestAsync(MyMapProject.Library.vietbandoAPI.SearchNearByRequest request) {
            return base.Channel.SearchNearBy_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.Multiplestring AutoSuggestSearch_Rest(MyMapProject.Library.vietbandoAPI.AutoSuggestSearchRequest keyword) {
            return base.Channel.AutoSuggestSearch_Rest(keyword);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Multiplestring> AutoSuggestSearch_RestAsync(MyMapProject.Library.vietbandoAPI.AutoSuggestSearchRequest keyword) {
            return base.Channel.AutoSuggestSearch_RestAsync(keyword);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse GeoCoding_Rest(MyMapProject.Library.vietbandoAPI.GeoCodingRequest request) {
            return base.Channel.GeoCoding_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse> GeoCoding_RestAsync(MyMapProject.Library.vietbandoAPI.GeoCodingRequest request) {
            return base.Channel.GeoCoding_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleGroupCategory GetAllGroupCategories_Rest(MyMapProject.Library.vietbandoAPI.GetAllGroupCategoriesRequest request) {
            return base.Channel.GetAllGroupCategories_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleGroupCategory> GetAllGroupCategories_RestAsync(MyMapProject.Library.vietbandoAPI.GetAllGroupCategoriesRequest request) {
            return base.Channel.GetAllGroupCategories_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleCategory GetCategoriesInGroup_Rest(MyMapProject.Library.vietbandoAPI.GetCategoriesInGroupRequest request) {
            return base.Channel.GetCategoriesInGroup_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleCategory> GetCategoriesInGroup_RestAsync(MyMapProject.Library.vietbandoAPI.GetCategoriesInGroupRequest request) {
            return base.Channel.GetCategoriesInGroup_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleCategory GetCategoryDetail_Rest(MyMapProject.Library.vietbandoAPI.GetCategoryDetailRequest request) {
            return base.Channel.GetCategoryDetail_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleCategory> GetCategoryDetail_RestAsync(MyMapProject.Library.vietbandoAPI.GetCategoryDetailRequest request) {
            return base.Channel.GetCategoryDetail_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleGroupCategory GetGroupCategoryDetail_Rest(MyMapProject.Library.vietbandoAPI.GetGroupCategoryDetailRequest request) {
            return base.Channel.GetGroupCategoryDetail_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGroupCategory> GetGroupCategoryDetail_RestAsync(MyMapProject.Library.vietbandoAPI.GetGroupCategoryDetailRequest request) {
            return base.Channel.GetGroupCategoryDetail_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInViolation_Rest(MyMapProject.Library.vietbandoAPI.CheckPointInViolationRequest request) {
            return base.Channel.CheckPointInViolation_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInViolation_RestAsync(MyMapProject.Library.vietbandoAPI.CheckPointInViolationRequest request) {
            return base.Channel.CheckPointInViolation_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult GetRoadSpeed_Rest(MyMapProject.Library.vietbandoAPI.GetRoadSpeedRequest request) {
            return base.Channel.GetRoadSpeed_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult> GetRoadSpeed_RestAsync(MyMapProject.Library.vietbandoAPI.GetRoadSpeedRequest request) {
            return base.Channel.GetRoadSpeed_RestAsync(request);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult BatchGetRoadSpeed_Rest(MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedRequest request) {
            return base.Channel.BatchGetRoadSpeed_Rest(request);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult> BatchGetRoadSpeed_RestAsync(MyMapProject.Library.vietbandoAPI.BatchGetRoadSpeedRequest request) {
            return base.Channel.BatchGetRoadSpeed_RestAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="vietbandoAPI.IPartnerPortalSoapService")]
    public interface IPartnerPortalSoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/ReverseGeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/ReverseGeoCodingResponse")]
        MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult ReverseGeoCoding(double longitude, double latitude, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/ReverseGeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/ReverseGeoCodingResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult> ReverseGeoCodingAsync(double longitude, double latitude, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/BatchReverseGeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/BatchReverseGeoCodingResponse")]
        MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult BatchReverseGeoCoding(MyMapProject.Library.vietbandoAPI.Point[] points, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/BatchReverseGeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/BatchReverseGeoCodingResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult> BatchReverseGeoCodingAsync(MyMapProject.Library.vietbandoAPI.Point[] points, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCentroidOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCentroidOfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.SinglePoint GetCentroidOfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCentroidOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCentroidOfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SinglePoint> GetCentroidOfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetMBROfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetMBROfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult GetMBROfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetMBROfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetMBROfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult> GetMBROfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetNameOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetNameOfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.Singlestring GetNameOfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetNameOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetNameOfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlestring> GetNameOfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionCodesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionCodesOfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionCodesOfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionCodesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionCodesOfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionCodesOfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNamesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNamesOfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionNamesOfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNamesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNamesOfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionNamesOfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNameCodesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNameCodesOfRegionRespons" +
            "e")]
        MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult GetSubRegionNameCodesOfRegion(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNameCodesOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetSubRegionNameCodesOfRegionRespons" +
            "e")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult> GetSubRegionNameCodesOfRegionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetThumbnailOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetThumbnailOfRegionResponse")]
        MyMapProject.Library.vietbandoAPI.Singlebase64Binary GetThumbnailOfRegion(string code, int width, int height, MyMapProject.Library.vietbandoAPI.RegionColor regionColor, int defaultColor, int imgType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetThumbnailOfRegion", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetThumbnailOfRegionResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlebase64Binary> GetThumbnailOfRegionAsync(string code, int width, int height, MyMapProject.Library.vietbandoAPI.RegionColor regionColor, int defaultColor, int imgType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/WhatHere", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/WhatHereResponse")]
        MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI WhatHere(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/WhatHere", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/WhatHereResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI> WhatHereAsync(double longitude, double latitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetNearestObjects", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetNearestObjectsResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI GetNearestObjects(double longitude, double latitude, double radius, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetNearestObjects", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetNearestObjectsResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> GetNearestObjectsAsync(double longitude, double latitude, double radius, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestPath", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathResponse")]
        MyMapProject.Library.vietbandoAPI.SingleDirectionResult FindShortestPath(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestPath", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleDirectionResult> FindShortestPathAsync(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathOrderFull", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathOrderFullResponse")]
        MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult FindShortestPathOrderFull(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathOrderFull", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestPathOrderFullResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult> FindShortestPathOrderFullAsync(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestWithBarriers", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestWithBarriersResponse")]
        MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult FindShortestWithBarriers(MyMapProject.Library.vietbandoAPI.Point[] points, string[] barriers, double departureTime, double[][] timeRanges, MyMapProject.Library.vietbandoAPI.TransportType transportType, double vehicleWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/FindShortestWithBarriers", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/FindShortestWithBarriersResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult> FindShortestWithBarriersAsync(MyMapProject.Library.vietbandoAPI.Point[] points, string[] barriers, double departureTime, double[][] timeRanges, MyMapProject.Library.vietbandoAPI.TransportType transportType, double vehicleWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SnapToStreet", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SnapToStreetResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint SnapToStreet(MyMapProject.Library.vietbandoAPI.Point[] points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SnapToStreet", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SnapToStreetResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint> SnapToStreetAsync(MyMapProject.Library.vietbandoAPI.Point[] points);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetDistances", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetDistancesResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble GetDistances(MyMapProject.Library.vietbandoAPI.Point[] sources, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetDistances", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetDistancesResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble> GetDistancesAsync(MyMapProject.Library.vietbandoAPI.Point[] sources, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetDistancesOnPaths", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetDistancesOnPathsResponse")]
        MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble GetDistancesOnPaths(MyMapProject.Library.vietbandoAPI.Point source, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance, bool isReverse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetDistancesOnPaths", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetDistancesOnPathsResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble> GetDistancesOnPathsAsync(MyMapProject.Library.vietbandoAPI.Point source, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance, bool isReverse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/CheckPointInShape", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/CheckPointInShapeResponse")]
        MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInShape(MyMapProject.Library.vietbandoAPI.Point point, MyMapProject.Library.vietbandoAPI.Point[] shape, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/CheckPointInShape", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/CheckPointInShapeResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInShapeAsync(MyMapProject.Library.vietbandoAPI.Point point, MyMapProject.Library.vietbandoAPI.Point[] shape, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchAllWithCategoryFilter", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchAllWithCategoryFilterResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAllWithCategoryFilter(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder, System.Nullable<int> CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchAllWithCategoryFilter", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchAllWithCategoryFilterResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllWithCategoryFilterAsync(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder, System.Nullable<int> CategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/AutoSuggestSearch", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/AutoSuggestSearchResponse")]
        MyMapProject.Library.vietbandoAPI.Multiplestring AutoSuggestSearch(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/AutoSuggestSearch", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/AutoSuggestSearchResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Multiplestring> AutoSuggestSearchAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchNearBy", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchNearByResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchNearBy(string keyword, MyMapProject.Library.vietbandoAPI.Point point, double radius, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchNearBy", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchNearByResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchNearByAsync(string keyword, MyMapProject.Library.vietbandoAPI.Point point, double radius, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GeoCodingResponse")]
        MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse GeoCoding(string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GeoCoding", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GeoCodingResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse> GeoCodingAsync(string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchAll", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchAllResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAll(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/SearchAll", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/SearchAllResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllAsync(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetAllGroupCategories", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetAllGroupCategoriesResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleGroupCategory GetAllGroupCategories(bool isGetCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetAllGroupCategories", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetAllGroupCategoriesResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleGroupCategory> GetAllGroupCategoriesAsync(bool isGetCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCategoriesInGroup", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCategoriesInGroupResponse")]
        MyMapProject.Library.vietbandoAPI.MultipleCategory GetCategoriesInGroup(int groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCategoriesInGroup", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCategoriesInGroupResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleCategory> GetCategoriesInGroupAsync(int groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCategoryDetail", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCategoryDetailResponse")]
        MyMapProject.Library.vietbandoAPI.SingleCategory GetCategoryDetail(int categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetCategoryDetail", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetCategoryDetailResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleCategory> GetCategoryDetailAsync(int categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetGroupCategoryDetail", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetGroupCategoryDetailResponse")]
        MyMapProject.Library.vietbandoAPI.SingleGroupCategory GetGroupCategoryDetail(int groupCode, bool isGetCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetGroupCategoryDetail", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetGroupCategoryDetailResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGroupCategory> GetGroupCategoryDetailAsync(int groupCode, bool isGetCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/CheckPointInViolation", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/CheckPointInViolationResponse")]
        MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInViolation(double longitude, double latitude, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/CheckPointInViolation", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/CheckPointInViolationResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInViolationAsync(double longitude, double latitude, string VehicleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetRoadSpeed", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetRoadSpeedResponse")]
        MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult GetRoadSpeed(MyMapProject.Library.vietbandoAPI.Point point, double speed, double Heading, int radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetRoadSpeed", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetRoadSpeedResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult> GetRoadSpeedAsync(MyMapProject.Library.vietbandoAPI.Point point, double speed, double Heading, int radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/BatchGetRoadSpeed", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/BatchGetRoadSpeedResponse")]
        MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult BatchGetRoadSpeed(MyMapProject.Library.vietbandoAPI.Point[] points, double[] speeds, double[] headings, int[] transportTypes, int radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/BatchGetRoadSpeed", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/BatchGetRoadSpeedResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult> BatchGetRoadSpeedAsync(MyMapProject.Library.vietbandoAPI.Point[] points, double[] speeds, double[] headings, int[] transportTypes, int radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/ForecastRoadsByTrafficSign", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/ForecastRoadsByTrafficSignResponse")]
        MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult ForecastRoadsByTrafficSign(MyMapProject.Library.vietbandoAPI.Point coordinator, double speed, double heading, int transportType, int distance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/ForecastRoadsByTrafficSign", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/ForecastRoadsByTrafficSignResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult> ForecastRoadsByTrafficSignAsync(MyMapProject.Library.vietbandoAPI.Point coordinator, double speed, double heading, int transportType, int distance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetTrackingInformation", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetTrackingInformationResponse")]
        MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult GetTrackingInformation(MyMapProject.Library.vietbandoAPI.Point prePoint, MyMapProject.Library.vietbandoAPI.Point curPoint, int transportType, double radius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerPortalSoapService/GetTrackingInformation", ReplyAction="http://tempuri.org/IPartnerPortalSoapService/GetTrackingInformationResponse")]
        System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult> GetTrackingInformationAsync(MyMapProject.Library.vietbandoAPI.Point prePoint, MyMapProject.Library.vietbandoAPI.Point curPoint, int transportType, double radius);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPartnerPortalSoapServiceChannel : MyMapProject.Library.vietbandoAPI.IPartnerPortalSoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PartnerPortalSoapServiceClient : System.ServiceModel.ClientBase<MyMapProject.Library.vietbandoAPI.IPartnerPortalSoapService>, MyMapProject.Library.vietbandoAPI.IPartnerPortalSoapService {
        
        public PartnerPortalSoapServiceClient() {
        }
        
        public PartnerPortalSoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PartnerPortalSoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerPortalSoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PartnerPortalSoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult ReverseGeoCoding(double longitude, double latitude, double radius) {
            return base.Channel.ReverseGeoCoding(longitude, latitude, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleReverseGeocodeResult> ReverseGeoCodingAsync(double longitude, double latitude, double radius) {
            return base.Channel.ReverseGeoCodingAsync(longitude, latitude, radius);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult BatchReverseGeoCoding(MyMapProject.Library.vietbandoAPI.Point[] points, double radius) {
            return base.Channel.BatchReverseGeoCoding(points, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchReverseGeocodingResult> BatchReverseGeoCodingAsync(MyMapProject.Library.vietbandoAPI.Point[] points, double radius) {
            return base.Channel.BatchReverseGeoCodingAsync(points, radius);
        }
        
        public MyMapProject.Library.vietbandoAPI.SinglePoint GetCentroidOfRegion(string code) {
            return base.Channel.GetCentroidOfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SinglePoint> GetCentroidOfRegionAsync(string code) {
            return base.Channel.GetCentroidOfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult GetMBROfRegion(string code) {
            return base.Channel.GetMBROfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleMBROfRegionResult> GetMBROfRegionAsync(string code) {
            return base.Channel.GetMBROfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singlestring GetNameOfRegion(string code) {
            return base.Channel.GetNameOfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlestring> GetNameOfRegionAsync(string code) {
            return base.Channel.GetNameOfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionCodesOfRegion(string code) {
            return base.Channel.GetSubRegionCodesOfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionCodesOfRegionAsync(string code) {
            return base.Channel.GetSubRegionCodesOfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfstring GetSubRegionNamesOfRegion(string code) {
            return base.Channel.GetSubRegionNamesOfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfstring> GetSubRegionNamesOfRegionAsync(string code) {
            return base.Channel.GetSubRegionNamesOfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult GetSubRegionNameCodesOfRegion(string code) {
            return base.Channel.GetSubRegionNameCodesOfRegion(code);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleSubRegionNameCodesResult> GetSubRegionNameCodesOfRegionAsync(string code) {
            return base.Channel.GetSubRegionNameCodesOfRegionAsync(code);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singlebase64Binary GetThumbnailOfRegion(string code, int width, int height, MyMapProject.Library.vietbandoAPI.RegionColor regionColor, int defaultColor, int imgType) {
            return base.Channel.GetThumbnailOfRegion(code, width, height, regionColor, defaultColor, imgType);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singlebase64Binary> GetThumbnailOfRegionAsync(string code, int width, int height, MyMapProject.Library.vietbandoAPI.RegionColor regionColor, int defaultColor, int imgType) {
            return base.Channel.GetThumbnailOfRegionAsync(code, width, height, regionColor, defaultColor, imgType);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI WhatHere(double longitude, double latitude) {
            return base.Channel.WhatHere(longitude, latitude);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleVietBandoPOI> WhatHereAsync(double longitude, double latitude) {
            return base.Channel.WhatHereAsync(longitude, latitude);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI GetNearestObjects(double longitude, double latitude, double radius, int limit) {
            return base.Channel.GetNearestObjects(longitude, latitude, radius, limit);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> GetNearestObjectsAsync(double longitude, double latitude, double radius, int limit) {
            return base.Channel.GetNearestObjectsAsync(longitude, latitude, radius, limit);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleDirectionResult FindShortestPath(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.FindShortestPath(points, transportType, alleyAvoidance);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleDirectionResult> FindShortestPathAsync(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.FindShortestPathAsync(points, transportType, alleyAvoidance);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult FindShortestPathOrderFull(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.FindShortestPathOrderFull(points, transportType, alleyAvoidance);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleFindShortestPathOrderResult> FindShortestPathOrderFullAsync(MyMapProject.Library.vietbandoAPI.Point[] points, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.FindShortestPathOrderFullAsync(points, transportType, alleyAvoidance);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult FindShortestWithBarriers(MyMapProject.Library.vietbandoAPI.Point[] points, string[] barriers, double departureTime, double[][] timeRanges, MyMapProject.Library.vietbandoAPI.TransportType transportType, double vehicleWeight) {
            return base.Channel.FindShortestWithBarriers(points, barriers, departureTime, timeRanges, transportType, vehicleWeight);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleShortestPathWithBarriersResult> FindShortestWithBarriersAsync(MyMapProject.Library.vietbandoAPI.Point[] points, string[] barriers, double departureTime, double[][] timeRanges, MyMapProject.Library.vietbandoAPI.TransportType transportType, double vehicleWeight) {
            return base.Channel.FindShortestWithBarriersAsync(points, barriers, departureTime, timeRanges, transportType, vehicleWeight);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint SnapToStreet(MyMapProject.Library.vietbandoAPI.Point[] points) {
            return base.Channel.SnapToStreet(points);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfPoint> SnapToStreetAsync(MyMapProject.Library.vietbandoAPI.Point[] points) {
            return base.Channel.SnapToStreetAsync(points);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble GetDistances(MyMapProject.Library.vietbandoAPI.Point[] sources, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.GetDistances(sources, destinations, transportType, alleyAvoidance);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfArrayOfdouble> GetDistancesAsync(MyMapProject.Library.vietbandoAPI.Point[] sources, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance) {
            return base.Channel.GetDistancesAsync(sources, destinations, transportType, alleyAvoidance);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble GetDistancesOnPaths(MyMapProject.Library.vietbandoAPI.Point source, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance, bool isReverse) {
            return base.Channel.GetDistancesOnPaths(source, destinations, transportType, alleyAvoidance, isReverse);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleArrayOfdouble> GetDistancesOnPathsAsync(MyMapProject.Library.vietbandoAPI.Point source, MyMapProject.Library.vietbandoAPI.Point[] destinations, MyMapProject.Library.vietbandoAPI.TransportType transportType, bool alleyAvoidance, bool isReverse) {
            return base.Channel.GetDistancesOnPathsAsync(source, destinations, transportType, alleyAvoidance, isReverse);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInShape(MyMapProject.Library.vietbandoAPI.Point point, MyMapProject.Library.vietbandoAPI.Point[] shape, double radius) {
            return base.Channel.CheckPointInShape(point, shape, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInShapeAsync(MyMapProject.Library.vietbandoAPI.Point point, MyMapProject.Library.vietbandoAPI.Point[] shape, double radius) {
            return base.Channel.CheckPointInShapeAsync(point, shape, radius);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAllWithCategoryFilter(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder, System.Nullable<int> CategoryCode) {
            return base.Channel.SearchAllWithCategoryFilter(keyword, page, pageSize, Lx, Ly, Rx, Ry, IsOrder, CategoryCode);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllWithCategoryFilterAsync(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder, System.Nullable<int> CategoryCode) {
            return base.Channel.SearchAllWithCategoryFilterAsync(keyword, page, pageSize, Lx, Ly, Rx, Ry, IsOrder, CategoryCode);
        }
        
        public MyMapProject.Library.vietbandoAPI.Multiplestring AutoSuggestSearch(string keyword) {
            return base.Channel.AutoSuggestSearch(keyword);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Multiplestring> AutoSuggestSearchAsync(string keyword) {
            return base.Channel.AutoSuggestSearchAsync(keyword);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchNearBy(string keyword, MyMapProject.Library.vietbandoAPI.Point point, double radius, int page, int pageSize) {
            return base.Channel.SearchNearBy(keyword, point, radius, page, pageSize);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchNearByAsync(string keyword, MyMapProject.Library.vietbandoAPI.Point point, double radius, int page, int pageSize) {
            return base.Channel.SearchNearByAsync(keyword, point, radius, page, pageSize);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse GeoCoding(string Address) {
            return base.Channel.GeoCoding(Address);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGeoCodingReponse> GeoCodingAsync(string Address) {
            return base.Channel.GeoCodingAsync(Address);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI SearchAll(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder) {
            return base.Channel.SearchAll(keyword, page, pageSize, Lx, Ly, Rx, Ry, IsOrder);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleVietBandoPOI> SearchAllAsync(string keyword, int page, int pageSize, double Lx, double Ly, double Rx, double Ry, bool IsOrder) {
            return base.Channel.SearchAllAsync(keyword, page, pageSize, Lx, Ly, Rx, Ry, IsOrder);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleGroupCategory GetAllGroupCategories(bool isGetCategory) {
            return base.Channel.GetAllGroupCategories(isGetCategory);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleGroupCategory> GetAllGroupCategoriesAsync(bool isGetCategory) {
            return base.Channel.GetAllGroupCategoriesAsync(isGetCategory);
        }
        
        public MyMapProject.Library.vietbandoAPI.MultipleCategory GetCategoriesInGroup(int groupCode) {
            return base.Channel.GetCategoriesInGroup(groupCode);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.MultipleCategory> GetCategoriesInGroupAsync(int groupCode) {
            return base.Channel.GetCategoriesInGroupAsync(groupCode);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleCategory GetCategoryDetail(int categoryCode) {
            return base.Channel.GetCategoryDetail(categoryCode);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleCategory> GetCategoryDetailAsync(int categoryCode) {
            return base.Channel.GetCategoryDetailAsync(categoryCode);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleGroupCategory GetGroupCategoryDetail(int groupCode, bool isGetCategory) {
            return base.Channel.GetGroupCategoryDetail(groupCode, isGetCategory);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleGroupCategory> GetGroupCategoryDetailAsync(int groupCode, bool isGetCategory) {
            return base.Channel.GetGroupCategoryDetailAsync(groupCode, isGetCategory);
        }
        
        public MyMapProject.Library.vietbandoAPI.Singleboolean CheckPointInViolation(double longitude, double latitude, string VehicleID) {
            return base.Channel.CheckPointInViolation(longitude, latitude, VehicleID);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.Singleboolean> CheckPointInViolationAsync(double longitude, double latitude, string VehicleID) {
            return base.Channel.CheckPointInViolationAsync(longitude, latitude, VehicleID);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult GetRoadSpeed(MyMapProject.Library.vietbandoAPI.Point point, double speed, double Heading, int radius) {
            return base.Channel.GetRoadSpeed(point, speed, Heading, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleRoadSpeedResult> GetRoadSpeedAsync(MyMapProject.Library.vietbandoAPI.Point point, double speed, double Heading, int radius) {
            return base.Channel.GetRoadSpeedAsync(point, speed, Heading, radius);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult BatchGetRoadSpeed(MyMapProject.Library.vietbandoAPI.Point[] points, double[] speeds, double[] headings, int[] transportTypes, int radius) {
            return base.Channel.BatchGetRoadSpeed(points, speeds, headings, transportTypes, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleBatchGetRoadSpeedReult> BatchGetRoadSpeedAsync(MyMapProject.Library.vietbandoAPI.Point[] points, double[] speeds, double[] headings, int[] transportTypes, int radius) {
            return base.Channel.BatchGetRoadSpeedAsync(points, speeds, headings, transportTypes, radius);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult ForecastRoadsByTrafficSign(MyMapProject.Library.vietbandoAPI.Point coordinator, double speed, double heading, int transportType, int distance) {
            return base.Channel.ForecastRoadsByTrafficSign(coordinator, speed, heading, transportType, distance);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleForecastTrackingGeoResult> ForecastRoadsByTrafficSignAsync(MyMapProject.Library.vietbandoAPI.Point coordinator, double speed, double heading, int transportType, int distance) {
            return base.Channel.ForecastRoadsByTrafficSignAsync(coordinator, speed, heading, transportType, distance);
        }
        
        public MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult GetTrackingInformation(MyMapProject.Library.vietbandoAPI.Point prePoint, MyMapProject.Library.vietbandoAPI.Point curPoint, int transportType, double radius) {
            return base.Channel.GetTrackingInformation(prePoint, curPoint, transportType, radius);
        }
        
        public System.Threading.Tasks.Task<MyMapProject.Library.vietbandoAPI.SingleTrackingInformationResult> GetTrackingInformationAsync(MyMapProject.Library.vietbandoAPI.Point prePoint, MyMapProject.Library.vietbandoAPI.Point curPoint, int transportType, double radius) {
            return base.Channel.GetTrackingInformationAsync(prePoint, curPoint, transportType, radius);
        }
    }
}
